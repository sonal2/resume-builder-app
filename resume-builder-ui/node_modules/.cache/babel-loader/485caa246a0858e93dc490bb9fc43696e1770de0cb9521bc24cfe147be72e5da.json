{"ast":null,"code":"var _jsxFileName = \"/Users/sonalsarin/Documents/CSUF Masters/Spring 2024/CPSC 597 Masters Project/Resume Builder UI/resume-builder-ui/src/components/workExperienceComponent.jsx\",\n  _s = $RefreshSig$();\nimport './workExperienceCSS.css';\nimport { WorkExperienceModel } from '../model/workExperience';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkExperience() {\n  _s();\n  const [workExperienceFormGroup, setWorkExperienceFormGroup] = useState([{}]);\n  function addWorkExperience() {\n    // setWorkExperienceFormGroup([...workExperienceFormGroup, {}])\n\n    setWorkExperiences([...workExperiences, {\n      \"title\": \"\",\n      \"company\": \"\",\n      \"startDateMonth\": \"\",\n      \"startDateYear\": \"\",\n      \"endDateMonth\": \"\",\n      \"endDateYear\": \"\",\n      \"currentlyWorkHere\": \"\",\n      \"locationCityState\": \"\",\n      \"workResponsibilities\": \"\",\n      \"new\": true\n    }]);\n    console.log('add work experience plus clicked');\n  }\n  const [workExperiences, setWorkExperiences] = useState(null);\n  useEffect(() => {\n    console.log('in use effect');\n    const getWorkExperiences = async () => {\n      console.log('in workExperience function');\n      let workExperienceModel = new WorkExperienceModel();\n      try {\n        // let educationModel = new EducationModel()\n        let workExperiences = await workExperienceModel.getWorkExperiences();\n        console.log('here');\n        console.log(`workExperiences ${workExperiences}`);\n        setWorkExperiences(workExperiences);\n      } catch (error) {\n        console.log('here2');\n        setWorkExperiences(null);\n      }\n    };\n    getWorkExperiences();\n  }, []);\n  function handleCheckboxChange(id, checked) {\n    console.log(`checked ${checked}`);\n    // target.setAttribute('checked', 'false')\n    // console.log(`target ${target}`)\n\n    //first, find the index of the educations array that matches the id\n    let index = null;\n    console.log(`id ${id}`);\n    for (let i = 0; i < workExperiences.length; i++) {\n      if (workExperiences[i].id == id) {\n        console.log('found match');\n        index = i;\n        break;\n      }\n    }\n    //then, slice the array to build the new array\n\n    let newWorkExperience = workExperiences[index];\n    console.log(newWorkExperience);\n    if (checked) {\n      newWorkExperience.currentlyWorkHere = true;\n    } else {\n      newWorkExperience.currentlyWorkHere = false;\n    }\n    setWorkExperiences(prevWorkExperiences => [...prevWorkExperiences.slice(0, index), newWorkExperience, ...prevWorkExperiences.slice(index + 1, prevWorkExperiences.length)]);\n  }\n  function handleTextChange(e, id, field) {\n    let index = null;\n    console.log(`id ${id}`);\n    for (let i = 0; i < workExperiences.length; i++) {\n      if (workExperiences[i].id == id) {\n        console.log('found match');\n        index = i;\n        break;\n      }\n    }\n    let newWorkExperience = workExperiences[index];\n    if (field == 'title') {\n      newWorkExperience.title = e.target.value;\n    } else if (field == 'company') {\n      newWorkExperience.company = e.target.value;\n    } else if (field == 'startDateYear') {\n      if (e.target.value.length <= 4) {\n        newWorkExperience.startDateYear = e.target.value.replace(/\\D/g, '');\n      }\n    } else if (field == 'endDateYear') {\n      if (e.target.value.length <= 4) {\n        newWorkExperience.endDateYear = e.target.value.replace(/\\D/g, '');\n      }\n    } else if (field == 'locationCityState') {\n      newWorkExperience.locationCityState = e.target.value;\n    } else if (field == 'workResponsibilities') {\n      newWorkExperience.workResponsibilities = e.target.value;\n    }\n    setWorkExperiences(prevWorkExperiences => [...prevWorkExperiences.slice(0, index), newWorkExperience, ...prevWorkExperiences.slice(index + 1, prevWorkExperiences.length)]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"workExperience-border\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"workExperience\",\n          children: \"Work Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), workExperiences != null ? workExperiences.map(workExperience =>\n        /*#__PURE__*/\n        // <div>\n        //     {workExperienceFormGroup.map(() => (\n        _jsxDEV(\"div\", {\n          class: \"workExperienceFormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"id\",\n            hidden: true,\n            children: workExperience.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleTextChange(e, education.id, 'title'),\n              style: {\n                width: `${workExperience.title.length > 0 ? workExperience.title.length : 40}ch`\n              },\n              type: \"text\",\n              placeholder: workExperiences == null ? 'Title' : null,\n              value: workExperiences != null ? workExperience.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleTextChange(e, education.id, 'company'),\n              style: {\n                width: `${workExperience.company.length > 0 ? workExperience.company.length + 1 : 30}ch`\n              },\n              type: \"text\",\n              placeholder: workExperiences == null ? 'Company' : null,\n              value: workExperiences != null ? workExperience.company : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"month\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"January\",\n                selected: workExperience.startDateMonth == 'January' ? true : false,\n                children: \"January\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Febuary\",\n                selected: workExperience.startDateMonth == 'Febuary' ? true : false,\n                children: \"Febuary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"March\",\n                selected: workExperience.startDateMonth == 'March' ? true : false,\n                children: \"March\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"April\",\n                selected: workExperience.startDateMonth == 'April' ? true : false,\n                children: \"April\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"May\",\n                selected: workExperience.startDateMonth == 'May' ? true : false,\n                children: \"May\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"June\",\n                selected: workExperience.startDateMonth == 'June' ? true : false,\n                children: \"June\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"July\",\n                selected: workExperience.startDateMonth == 'July' ? true : false,\n                children: \"July\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"August\",\n                selected: workExperience.startDateMonth == 'August' ? true : false,\n                children: \"August\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"September\",\n                selected: workExperience.startDateMonth == 'September' ? true : false,\n                children: \"September\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"October\",\n                selected: workExperience.startDateMonth == 'October' ? true : false,\n                children: \"October\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"November\",\n                selected: workExperience.startDateMonth == 'November' ? true : false,\n                children: \"November\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"December\",\n                selected: workExperience.startDateMonth == 'December' ? true : false,\n                children: \"December\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleTextChange(e, education.id, 'startDateYear'),\n              style: {\n                width: `${workExperience.startDateYear.length > 0 ? workExperience.startDateYear.length : 5}ch`\n              },\n              type: \"text\",\n              placeholder: workExperiences == null ? 'Year' : null,\n              value: workExperiences != null ? `${workExperience.startDateYear}` : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), workExperience.new == true && workExperience.new != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Currently Work Here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 37\n          }, this) : null, workExperience.currentlyWorkHere == 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Currently Work Here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              checked: workExperience.currentlyWorkHere,\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: `${workExperience.endDateMonth.length + workExperience.endDateYear.length > 0 ? workExperience.endDateMonth.length + workExperience.endDateYear.length : 30}ch`\n                },\n                type: \"text\",\n                placeholder: workExperiences == null ? 'End Date' : null,\n                value: workExperiences != null ? `${workExperience.endDateMonth} ${workExperience.endDateYear}` : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Date Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"month\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"January\",\n                  selected: workExperience.endDateMonth == 'January' ? true : false,\n                  children: \"January\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Febuary\",\n                  selected: workExperience.endDateMonth == 'Febuary' ? true : false,\n                  children: \"Febuary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"March\",\n                  selected: workExperience.endDateMonth == 'March' ? true : false,\n                  children: \"March\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"April\",\n                  selected: workExperience.endDateMonth == 'April' ? true : false,\n                  children: \"April\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"May\",\n                  selected: workExperience.endDateMonth == 'May' ? true : false,\n                  children: \"May\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"June\",\n                  selected: workExperience.endDateMonth == 'June' ? true : false,\n                  children: \"June\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"July\",\n                  selected: workExperience.endDateMonth == 'July' ? true : false,\n                  children: \"July\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"August\",\n                  selected: workExperience.endDateMonth == 'August' ? true : false,\n                  children: \"August\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"September\",\n                  selected: workExperience.endDateMonth == 'September' ? true : false,\n                  children: \"September\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"October\",\n                  selected: workExperience.endDateMonth == 'October' ? true : false,\n                  children: \"October\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"November\",\n                  selected: workExperience.endDateMonth == 'November' ? true : false,\n                  children: \"November\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"December\",\n                  selected: workExperience.endDateMonth == 'December' ? true : false,\n                  children: \"December\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Date Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: `${workExperience.endDateYear.length > 0 ? workExperience.endDateYear.length : 5}ch`\n                },\n                type: \"text\",\n                placeholder: workExperiences == null ? 'Year' : null,\n                value: workExperiences != null ? `${workExperience.endDateYear}` : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"City, State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => handleTextChange(e, education.id, 'locationCityState'),\n              style: {\n                width: `${workExperience.locationCityState.length > 0 ? workExperience.locationCityState.length : 30}ch`\n              },\n              type: \"text\",\n              placeholder: workExperiences == null ? 'City, State' : null,\n              value: workExperiences != null ? workExperience.locationCityState : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Work Responsibilities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: e => handleTextChange(e, education.id, 'workResponsibilities'),\n              style: {\n                width: `${workExperience.workResponsibilities.length > 0 ? workExperience.workResponsibilities.length : 30}ch`\n              },\n              placeholder: workExperiences == null ? 'Work Responsibilities' : null,\n              value: workExperiences != null ? workExperience.workResponsibilities : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 33\n          }, this), workExperienceFormGroup.length > 1 || workExperiences.length > 1 ? /*#__PURE__*/_jsxDEV(\"hr\", {\n            class: \"workExperienceDivider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 102\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this)\n        //     ))}                        \n        // </div>\n        ) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"plus\",\n          onClick: () => addWorkExperience(),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n_s(WorkExperience, \"Xr8GC+NKg7zeo/obpN4Mds6868Y=\");\n_c = WorkExperience;\nexport default WorkExperience;\nvar _c;\n$RefreshReg$(_c, \"WorkExperience\");","map":{"version":3,"names":["WorkExperienceModel","useState","useEffect","jsxDEV","_jsxDEV","WorkExperience","_s","workExperienceFormGroup","setWorkExperienceFormGroup","addWorkExperience","setWorkExperiences","workExperiences","console","log","getWorkExperiences","workExperienceModel","error","handleCheckboxChange","id","checked","index","i","length","newWorkExperience","currentlyWorkHere","prevWorkExperiences","slice","handleTextChange","e","field","title","target","value","company","startDateYear","replace","endDateYear","locationCityState","workResponsibilities","class","children","fileName","_jsxFileName","lineNumber","columnNumber","map","workExperience","hidden","onChange","education","style","width","type","placeholder","name","selected","startDateMonth","new","endDateMonth","onClick","_c","$RefreshReg$"],"sources":["/Users/sonalsarin/Documents/CSUF Masters/Spring 2024/CPSC 597 Masters Project/Resume Builder UI/resume-builder-ui/src/components/workExperienceComponent.jsx"],"sourcesContent":["import './workExperienceCSS.css'\nimport { WorkExperienceModel } from '../model/workExperience';\nimport {useState, useEffect} from 'react'\n\n\nfunction WorkExperience() {\n\n\n    const [workExperienceFormGroup, setWorkExperienceFormGroup] = useState([{}]);\n\n    function addWorkExperience() {\n        // setWorkExperienceFormGroup([...workExperienceFormGroup, {}])\n\n        setWorkExperiences([...workExperiences, {\n            \"title\": \"\",\n            \"company\": \"\",\n            \"startDateMonth\": \"\",\n            \"startDateYear\": \"\",\n            \"endDateMonth\": \"\",\n            \"endDateYear\": \"\",\n            \"currentlyWorkHere\": \"\",\n            \"locationCityState\": \"\",\n            \"workResponsibilities\": \"\",\n            \"new\": true\n        }])\n        console.log('add work experience plus clicked')\n    }\n\n\n    const [workExperiences, setWorkExperiences] = useState(null)\n\n    useEffect(() => {\n        console.log('in use effect')\n            const getWorkExperiences = async() => {\n                console.log('in workExperience function')\n                let workExperienceModel = new WorkExperienceModel()\n\n                try {\n                    // let educationModel = new EducationModel()\n                    let workExperiences = await workExperienceModel.getWorkExperiences()\n                    console.log('here')\n                    console.log(`workExperiences ${workExperiences}`)\n                    setWorkExperiences(workExperiences)\n                }\n                catch (error) {\n                    console.log('here2');\n                    setWorkExperiences(null)\n                }\n            }\n            getWorkExperiences();\n\n\n    }, [])\n\n    function handleCheckboxChange(id, checked) {\n        console.log(`checked ${checked}`)\n        // target.setAttribute('checked', 'false')\n        // console.log(`target ${target}`)\n\n        //first, find the index of the educations array that matches the id\n        let index = null\n        console.log(`id ${id}`)\n        for(let i = 0; i < workExperiences.length; i++) {\n            if(workExperiences[i].id == id) {\n                console.log('found match')\n                index = i\n                break\n            }\n        }\n        //then, slice the array to build the new array\n\n        let newWorkExperience = workExperiences[index]\n        console.log(newWorkExperience)\n        if(checked) {\n            newWorkExperience.currentlyWorkHere = true\n        }\n        else {\n            newWorkExperience.currentlyWorkHere = false\n        }\n\n        setWorkExperiences(prevWorkExperiences => [\n            ...prevWorkExperiences.slice(0,index),\n            newWorkExperience,\n            ...prevWorkExperiences.slice(index+1, prevWorkExperiences.length)\n        ])\n\n        \n    }\n\n\n    function handleTextChange(e, id, field) {\n        let index = null\n        console.log(`id ${id}`)\n        for(let i = 0; i < workExperiences.length; i++) {\n            if(workExperiences[i].id == id) {\n                console.log('found match')\n                index = i\n                break\n            }\n        }\n\n        let newWorkExperience = workExperiences[index]\n\n        if(field == 'title') {\n            newWorkExperience.title = e.target.value\n        }\n        else if(field == 'company') {\n            newWorkExperience.company = e.target.value\n        }\n        else if (field == 'startDateYear') {\n            if(e.target.value.length <= 4) {\n                newWorkExperience.startDateYear = e.target.value.replace(/\\D/g, '')\n            }        \n        }\n        else if(field == 'endDateYear') {\n            if(e.target.value.length <= 4) {\n                newWorkExperience.endDateYear = e.target.value.replace(/\\D/g, '')\n            }\n        }\n        else if(field == 'locationCityState') {\n            newWorkExperience.locationCityState = e.target.value\n        }\n        else if(field == 'workResponsibilities') {\n            newWorkExperience.workResponsibilities = e.target.value\n        }\n\n\n        setWorkExperiences(prevWorkExperiences => [\n            ...prevWorkExperiences.slice(0,index),\n            newWorkExperience,\n            ...prevWorkExperiences.slice(index+1, prevWorkExperiences.length)\n        ])\n    }\n\n\n    return (\n        <div class='container'>\n        <form>\n            <div class='workExperience-border'>\n                <h1 class='workExperience'>Work Experience</h1>\n                <hr></hr>\n\n                {workExperiences != null ? workExperiences.map((workExperience) => (\n                    // <div>\n                    //     {workExperienceFormGroup.map(() => (\n                            <div class = 'workExperienceFormGroup'>\n\n                                <p id='id' hidden>{workExperience.id}</p>\n\n                                <div class='form-group'>\n                                    <label>Title</label>\n                                    <input onChange={(e) => handleTextChange(e, education.id, 'title')}  style = {{width: `${workExperience.title.length > 0 ? workExperience.title.length : 40}ch`}} type=\"text\" placeholder={workExperiences == null ? 'Title' : null} value = {workExperiences != null ? workExperience.title : null}/>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label>Company</label>\n                                    <input onChange={(e) => handleTextChange(e, education.id, 'company')} style = {{width: `${workExperience.company.length > 0 ? workExperience.company.length + 1 : 30}ch`}} type=\"text\" placeholder={workExperiences == null ? 'Company' : null} value = {workExperiences != null ? workExperience.company : null}/>\n                                </div>\n\n                                \n\n                                <div class='form-group'>\n                                <label>Start Date Month</label>\n                                <select name=\"month\">\n                                    <option value=\"January\" selected = {workExperience.startDateMonth == 'January' ? true :  false}>January</option> \n                                    <option value=\"Febuary\" selected = {workExperience.startDateMonth == 'Febuary' ? true :  false}>Febuary</option>\n                                    <option value=\"March\" selected = {workExperience.startDateMonth == 'March' ? true :  false}>March</option>\n                                    <option value=\"April\" selected = {workExperience.startDateMonth == 'April' ? true :  false}>April</option>\n                                    <option value=\"May\" selected = {workExperience.startDateMonth == 'May' ? true :  false}>May</option>\n                                    <option value=\"June\" selected = {workExperience.startDateMonth == 'June' ? true :  false}>June</option>\n                                    <option value=\"July\" selected = {workExperience.startDateMonth == 'July' ? true :  false}>July</option>\n                                    <option value=\"August\" selected = {workExperience.startDateMonth == 'August' ? true :  false}>August</option>\n                                    <option value=\"September\" selected = {workExperience.startDateMonth == 'September' ? true :  false}>September</option>\n                                    <option value=\"October\" selected = {workExperience.startDateMonth == 'October' ? true :  false}>October</option>\n                                    <option value=\"November\" selected = {workExperience.startDateMonth == 'November' ? true :  false}>November</option>\n                                    <option value=\"December\" selected = {workExperience.startDateMonth == 'December' ? true :  false}>December</option>\n\n                                </select>\n                            </div>\n\n                            {/* change to date picker */}\n                            <div class='form-group'>\n                                    <label>Start Date Year</label>\n                                    <input onChange={(e) => handleTextChange(e, education.id, 'startDateYear')} style = {{width: `${workExperience.startDateYear.length > 0 ? workExperience.startDateYear.length : 5}ch`}} type=\"text\" placeholder={workExperiences == null ? 'Year' : null} value = {workExperiences != null ? `${workExperience.startDateYear}` : null}/>\n                            </div>\n\n                                {workExperience.new == true && workExperience.new != null ? (\n                                    <div class='form-group'>\n                                        <label>Currently Work Here</label>\n                                        <input type=\"checkbox\"/>\n                                    </div>\n                            ) : null}\n\n                                {workExperience.currentlyWorkHere == 1 ? (\n                                    <div class='form-group'>\n                                        <label>Currently Work Here</label>\n                                        <input checked = {workExperience.currentlyWorkHere} type=\"checkbox\"/>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <div class='form-group'>\n                                            <label>End Date</label>\n                                            {/* add regex for checking input of this field to match Month, Year format (same for start date input field) */}\n                                            <input style = {{width: `${workExperience.endDateMonth.length + workExperience.endDateYear.length > 0 ? workExperience.endDateMonth.length + workExperience.endDateYear.length : 30}ch`}} type=\"text\" placeholder={workExperiences == null ? 'End Date' : null} value = {workExperiences != null ? `${workExperience.endDateMonth} ${workExperience.endDateYear}` : null}/>\n                                        </div>\n\n                                        <div class='form-group'>\n                                            <label>End Date Month</label>\n                                            <select name=\"month\">\n                                                <option value=\"January\" selected = {workExperience.endDateMonth == 'January' ? true :  false}>January</option> \n                                                <option value=\"Febuary\" selected = {workExperience.endDateMonth == 'Febuary' ? true :  false}>Febuary</option>\n                                                <option value=\"March\" selected = {workExperience.endDateMonth == 'March' ? true :  false}>March</option>\n                                                <option value=\"April\" selected = {workExperience.endDateMonth == 'April' ? true :  false}>April</option>\n                                                <option value=\"May\" selected = {workExperience.endDateMonth == 'May' ? true :  false}>May</option>\n                                                <option value=\"June\" selected = {workExperience.endDateMonth == 'June' ? true :  false}>June</option>\n                                                <option value=\"July\" selected = {workExperience.endDateMonth == 'July' ? true :  false}>July</option>\n                                                <option value=\"August\" selected = {workExperience.endDateMonth == 'August' ? true :  false}>August</option>\n                                                <option value=\"September\" selected = {workExperience.endDateMonth == 'September' ? true :  false}>September</option>\n                                                <option value=\"October\" selected = {workExperience.endDateMonth == 'October' ? true :  false}>October</option>\n                                                <option value=\"November\" selected = {workExperience.endDateMonth == 'November' ? true :  false}>November</option>\n                                                <option value=\"December\" selected = {workExperience.endDateMonth == 'December' ? true :  false}>December</option>\n\n                                            </select>\n                                        </div>\n\n                                         {/* change to date picker */}\n                                        <div class='form-group'>\n                                                <label>End Date Year</label>\n                                                <input style = {{width: `${workExperience.endDateYear.length > 0 ? workExperience.endDateYear.length : 5}ch`}} type=\"text\" placeholder={workExperiences == null ? 'Year' : null} value = {workExperiences != null ? `${workExperience.endDateYear}` : null}/>\n                                        </div>\n                                    </div>\n                                )}\n                                \n                        \n                                <div class='form-group'>\n                                    <label>City, State</label>\n                                    <input onChange={(e) => handleTextChange(e, education.id, 'locationCityState')} style = {{width: `${workExperience.locationCityState.length > 0 ? workExperience.locationCityState.length : 30}ch`}} type=\"text\" placeholder={workExperiences == null ? 'City, State' : null} value = {workExperiences != null ? workExperience.locationCityState : null}/>\n                                </div>\n\n                                <div class='form-group'>\n                                    <label>Work Responsibilities</label>\n                                    <textarea onChange={(e) => handleTextChange(e, education.id, 'workResponsibilities')} style = {{width: `${workExperience.workResponsibilities.length > 0 ? workExperience.workResponsibilities.length : 30}ch`}} placeholder={workExperiences == null ? 'Work Responsibilities' : null} value = {workExperiences != null ? workExperience.workResponsibilities : null}/>\n                                </div>\n\n                                {workExperienceFormGroup.length > 1 || workExperiences.length > 1 ? (<hr class='workExperienceDivider'></hr>) : (null)}\n\n                            </div>\n                    //     ))}                        \n                    // </div>\n                )) : null}\n\n                <h1 id='plus' onClick={()=>addWorkExperience()}>+</h1>\n\n            </div>\n        </form>\n       \n    </div>\n    )\n}\n\nexport default WorkExperience;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}