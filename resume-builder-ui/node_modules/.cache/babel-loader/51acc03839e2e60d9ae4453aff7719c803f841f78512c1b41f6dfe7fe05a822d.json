{"ast":null,"code":"export class EducationModel {\n  constructor() {}\n  async getEducation() {\n    return fetch('/api/education').then(res => {\n      if (res.status == 500) {\n        throw new Error();\n      } else {\n        return res.json();\n      }\n    }).then(res => res);\n  }\n  async postEducation(education) {\n    return fetch('/api/education', {\n      method: 'POST',\n      body: JSON.stringify(education),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status == 500) {\n        throw new Error();\n      } else {\n        return res.json();\n      }\n    }).then(res => res);\n  }\n  async putEducation(education) {\n    return fetch('/api/education', {\n      method: 'PUT',\n      body: JSON.stringify(education),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status == 500) {\n        throw new Error();\n      } else {\n        return res.json();\n      }\n    }).then(res => res);\n  }\n  async deleteEducation(id) {\n    return fetch(`/api/education/${id}`, {\n      method: 'DELETE'\n    }).then(res => {\n      if (res.status == 500) {\n        throw new Error();\n      }\n    }).then(res => res);\n  }\n  async saveEducations(educations) {\n    console.log('inside save educations model');\n    try {\n      let existingEducations = await this.getEducation();\n      let set = new Set();\n      existingEducations.forEach(element => {\n        set.add(element.id);\n      });\n      for (let i = 0; i < educations.length; i++) {\n        if (!set.has(educations[i].id)) {\n          await this.postEducation(educations[i]);\n        } else {\n          if (set.has(educations[i].id)) {\n            console.log(educations[i].id);\n            console.log(educations[i]);\n            await this.putEducation(educations[i]);\n            set.delete(educations[i].id);\n          }\n        }\n      }\n      let deletePromises = [];\n      set.forEach(async id => {\n        deletePromises.push(this.deleteEducation(id));\n      });\n      await Promise.all(deletePromises);\n    } catch {\n      for (let i = 0; i < educations.length; i++) {\n        await this.postEducation(educations[i]);\n      }\n    }\n  }\n}","map":{"version":3,"names":["EducationModel","constructor","getEducation","fetch","then","res","status","Error","json","postEducation","education","method","body","JSON","stringify","headers","putEducation","deleteEducation","id","saveEducations","educations","console","log","existingEducations","set","Set","forEach","element","add","i","length","has","delete","deletePromises","push","Promise","all"],"sources":["/Users/sonalsarin/Documents/CSUF Masters/Spring 2024/CPSC 597 Masters Project/Resume Builder UI/resume-builder-ui/src/model/education.js"],"sourcesContent":["export class EducationModel {\n    constructor() {\n\n    }\n\n    async getEducation() {\n        return fetch('/api/education').then(res => {\n            if (res.status == 500) {\n                throw new Error;\n            }\n            else {\n                return res.json()\n            }\n        }\n        ).then(res=> \n            res\n        )\n    }\n\n    async postEducation(education) {\n        return fetch('/api/education', {\n            method: 'POST',\n            body: JSON.stringify(education),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then(res => {\n            if (res.status == 500) {\n                throw new Error;\n            }\n            else {\n                return res.json()\n            }\n        }\n        ).then(res=> \n            res\n        )\n    }\n\n    async putEducation(education) {\n        return fetch('/api/education', {\n            method: 'PUT',\n            body: JSON.stringify(education),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then(res => {\n            if (res.status == 500) {\n                throw new Error;\n            }\n            else {\n                return res.json()\n            }\n        }\n        ).then(res=> \n            res\n        )\n    }\n\n    async deleteEducation(id) {\n        return fetch(`/api/education/${id}`, {\n            method: 'DELETE',\n        }).then(res => {\n            if (res.status == 500) {\n                throw new Error;\n            }\n          \n        }\n        ).then(res=> \n            res\n        )\n    }\n\n    async saveEducations(educations) {\n        console.log('inside save educations model')\n        try {\n            let existingEducations = await this.getEducation()\n\n            let set = new Set()\n            existingEducations.forEach(element => {\n                set.add(element.id)\n            });\n\n    \n            for(let i = 0; i < educations.length; i++) {\n               \n                if(!set.has(educations[i].id)) {\n                    await this.postEducation(educations[i])\n                }\n                else {\n                    if(set.has(educations[i].id)) {\n                        console.log(educations[i].id)\n                        console.log(educations[i])\n                        await this.putEducation(educations[i])\n    \n                        set.delete(educations[i].id)\n                    }\n                }\n            }\n\n            let deletePromises = []\n            set.forEach(async(id) => {\n                deletePromises.push(this.deleteEducation(id))\n            })          \n\n            await Promise.all(deletePromises)\n        }\n        catch {\n            for(let i = 0; i < educations.length; i++) {\n                await this.postEducation(educations[i])\n            }\n        }\n\n\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}